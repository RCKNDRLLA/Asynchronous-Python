# Вам необходимо исправить код ниже, который выводит сообщения от шести корутин (coroutine_1 до coroutine_6).

# Сначала выводятся первые сообщения от всех корутин по порядку, от первой до шестой.
# Затем выводятся вторые сообщения от всех корутин по порядку, также от первой до шестой.
# Ключевые моменты:
# Значения задержек в await asyncio.sleep(t) для каждой корутины должны быть подобраны таким образом, чтобы обеспечить вывод сообщений строго в соответствии с заданным шаблоном. Вам нужно хорошо себе представлять, как данные асинхронные задачи будут выполняться и в каком порядке.

# Сообщения должны выводиться в следующем порядке:

# Сообщение 1 от корутины 1
# Сообщение 1 от корутины 2
# Сообщение 1 от корутины 3
# Сообщение 1 от корутины 4
# Сообщение 1 от корутины 5
# Сообщение 1 от корутины 6
# Сообщение 2 от корутины 1
# Сообщение 2 от корутины 2
# Сообщение 2 от корутины 3
# Сообщение 2 от корутины 4
# Сообщение 2 от корутины 5
# Сообщение 2 от корутины 6

# ссылка на задачу - https://stepik.org/lesson/933678/step/11?unit=939577


import asyncio

async def coroutine_1():
    await asyncio.sleep(1)  # Задержка для первого сообщения
    print("Сообщение 1 от корутины 1")
    await asyncio.sleep(1)  # Задержка для второго сообщения
    print("Сообщение 2 от корутины 1")

async def coroutine_2():
    await asyncio.sleep(1)
    print("Сообщение 1 от корутины 2")
    await asyncio.sleep(1)
    print("Сообщение 2 от корутины 2")

async def coroutine_3():
    await asyncio.sleep(1)
    print("Сообщение 1 от корутины 3")
    await asyncio.sleep(1)
    print("Сообщение 2 от корутины 3")

async def coroutine_4():
    await asyncio.sleep(1)
    print("Сообщение 1 от корутины 4")
    await asyncio.sleep(1)
    print("Сообщение 2 от корутины 4")

async def coroutine_5():
    await asyncio.sleep(1)
    print("Сообщение 1 от корутины 5")
    await asyncio.sleep(1)
    print("Сообщение 2 от корутины 5")

async def coroutine_6():
    await asyncio.sleep(1)
    print("Сообщение 1 от корутины 6")
    await asyncio.sleep(1)
    print("Сообщение 2 от корутины 6")

async def main():
    await asyncio.gather(
        coroutine_1(),
        coroutine_2(),
        coroutine_3(),
        coroutine_4(),
        coroutine_5(),
        coroutine_6(),
    )

asyncio.run(main())