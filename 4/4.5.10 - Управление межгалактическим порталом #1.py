# Ваша задача состоит в том, чтобы написать асинхронный код, который будет имитировать процесс активации портала и последующую телепортацию. Каждая операция требует определенного времени и выделяет или использует определенное количество единиц энергии.

# Создайте асинхронную функцию activate_portal(x), где x — время, необходимое для активации портала. Функция должна печатать сообщение об активации портала и затем "засыпать" на время x, имитируя процесс активации. После активации функция возвращает x * 2, что представляет собой количество энергии, выделенной при активации.
# Вывод сообщения в консоль:
# Активация портала в процессе, требуется времени: 2 единиц
 
# Создайте асинхронную функцию perform_teleportation(x), где x* — время, необходимое для телепортации. Функция должна печатать сообщение о процессе телепортации и затем "засыпать" на время x, имитируя процесс телепортации. После завершения телепортации функция возвращает x + 2, что представляет собой количество времени, использованное в процессе телепортации.
# Телепортация в процессе, требуется времени: 4 единиц
# *в качестве значения x используйте 2 единицы времени.

# Создайте основную асинхронную функцию управления portal_operator(). Она запускает задачу активации портала и затем запускает задачу телепортации, основываясь на результате активации портала. Если результат активации портала превышает 4 единицы энергии, время для телепортации равно 1 единице. В противном случае время для телепортации равно количеству энергии, выделенной при активации портала. В конце функция печатает результаты активации портала и телепортации.

# ссылка на задачу - https://stepik.org/lesson/933689/step/10?unit=939588

import asyncio as a

async def activate_portal(x):
    print('Активация портала в процессе, требуется времени: 2 единиц')
    await a.sleep(x)
    return x*2

async def perform_teleportation(x):
    print('Телепортация в процессе, требуется времени: 4 единиц')
    await a.sleep(x)
    return x+2

async def portal_operator():
    tasks = [a.create_task(activate_portal(2)), a.create_task(perform_teleportation(4))]
    result = await a.gather(*tasks)
    print(f'Результат активации портала: {result[0]} единиц энергии')
    print(f'Результат телепортации: {result[1]} единиц времени')          

a.run(portal_operator())