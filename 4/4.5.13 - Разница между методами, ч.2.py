# Входящие условия аналогичны предыдущей задаче: в приложение с разных сервисов отправляются корутины или объекты Task. Все эти объекты сохранены в список awaitables в корутине main().

# Но теперь вам нужно получить результат только тех задач, которые приходят в виде корутин. А те задачи, что приходят в виде объектов Task на данный момент обрабатывать не нужно (такое возможно, если сервис, отправляющий задачи в виде объектов Task, не возвращает никакой ценный результат, а реализует другую логику, например, запись информации в файл или БД).

# Вы можете использовать разные способы фильтрации объектов корутин от объектов Task, но предлагаю использовать особенность метода ensure_future(), который при передаче в него объектов  Task и Future возвращает тот же самый объект. А при передаче корутин - создает другие объекты Task.

# Условия задачи: 

# Допишите корутину main(), так чтобы она возвращала список результатов всех задач, которые в исходном списке awaitables находятся в виде объектов корутин.
# Запускать корутину main() не нужно.
# Выводить на экран также ничего не нужно.

# ссылка на задачу - https://stepik.org/lesson/933689/step/13?unit=939588

async def main():
    awaitables = [aw for aw in await get_coros_and_tasks()]
    tasks = [asyncio.ensure_future(task) for task in awaitables if not isinstance(task, asyncio.Task)]
    return await asyncio.gather(*tasks)