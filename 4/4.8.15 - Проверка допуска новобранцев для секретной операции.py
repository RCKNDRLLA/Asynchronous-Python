# В рамках подготовки к важной секретной операции вам, как руководителю группы новобранцев в шпионской школе, поручено провести проверку допуска каждого участника. У вас есть анкеты 20 человек, содержащие всю необходимую информацию для оценки их готовности участия в операции. Основной критерий — наличие действующего срока доступа, указанного в поле "Срок доступа" анкеты. Если срок доступа не указан (None), это означает, что доступ к операциям для данного участника закрыт, и вследствие этого, операция для всей группы должна быть отменена.

# Напишите код, который асинхронно проверяет для каждого участника наличие "Срок доступа". И в случае успеха, соответствующая задача выводит сообщение.

# Если для какого-либо участника "Срок доступа" указан None т.е. отсутствует, необходимо возбудить исключение и отменить выполнение всех оставшихся проверок, так как вся секретная операция становится невозможной. Важно корректно обрабатывать исключения, чтобы при обнаружении первого участника без допуска, программа не продолжала бессмысленно проверять остальных.

# В случае обнаружения участника без допуска т.е.  "Срок доступа": None, все оставшиеся задачи должны быть немедленно отменены с соответствующим уведомлением.

# ссылка на задачу - https://stepik.org/lesson/933688/step/15?unit=939587

import asyncio

data = [
    {
        "Имя": "Sarah",
        "Фамилия": "Lewis",
        "Возраст": 54,
        "Навыки": 10,
        "Страна проживания": "Tuvalu",
        "Город проживания": "North Heathertown",
        "Уровень секретности": 1,
        "Псевдоним": "michelestanton",
        "Профессия": "Консультант по безопасности",
        "Владение иностранными языками": {
            "Английский": "Свободно"
        },
        "Специализированные навыки": "Взлом, слежка",
        "Образование": "Военная академия",
        "Предыдущие места работы": "Неизвестно",
        "Хобби и интересы": "Фотография, путешествия",
        "Членство в организациях": "Неизвестно",
        "История путешествий": "Многочисленные страны",
        "Наличие дипломатического паспорта": True,
        "Биометрические данные": "Доступны",
        "Семейное положение": "Неизвестно",
        "Наличие специализированного оборудования": "Есть",
        "Срок доступа": "5857 часов",
        "Тайные операции": [
            "Операция 'Кондор'",
            "Операция 'Снег'"
        ],
        "Скрытые навыки": [
            "Мастер перевоплощений",
            "Эксперт по криптографии"
        ],
        "Контакты в иностранных спецслужбах": "Turner, Craig and Ortiz",
        "Специализация": "Контрразведка"
    }
]

async def check_access(data_elem):
    await asyncio.sleep(data_elem["Уровень секретности"])
    if data_elem["Срок доступа"]:
        print(f'Участник {data_elem["Имя"]} {data_elem["Фамилия"]} имеет действующий доступ. Продолжительность доступа: {data_elem["Срок доступа"]}')
    else:
        raise ValueError(f'Ошибка доступа: У участника {data_elem["Имя"]} {data_elem["Фамилия"]} срок доступа истек или не указан.')


async def main():
    tasks = [asyncio.create_task(check_access(data_elem), name=f"{data_elem['Имя']} {data_elem['Фамилия']}") for data_elem in data]
    done, pending = await asyncio.wait(tasks, return_when=asyncio.FIRST_EXCEPTION)
    for task in pending:
        task.cancel()
        print(f'Доступ участника {task.get_name()} отменен из-за критической ошибки.')
    for task in done:
        if task.exception() is not None:
            print(task.exception())



asyncio.run(main())